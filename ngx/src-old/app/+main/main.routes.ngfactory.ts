/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './main.routes';
import * as import2 from '@angular/router/src/router_module';
import * as import3 from '@angular/core/src/di/injector';
import * as import4 from './view.component.ngfactory';
import * as import5 from './gpview.component.ngfactory';
import * as import6 from './main.component.ngfactory';
import * as import7 from './view.component';
import * as import8 from './gpview.component';
import * as import9 from './main.component';
import * as import10 from '@angular/router/src/router_config_loader';
class MainRoutesModuleInjector extends import0.NgModuleInjector<import1.MainRoutesModule> {
  _RouterModule_0:import2.RouterModule;
  _MainRoutesModule_1:import1.MainRoutesModule;
  __ROUTES_2:any[];
  constructor(parent:import3.Injector) {
    super(parent,[
      import4.ViewComponentNgFactory,
      import5.GpviewComponentNgFactory,
      import6.MainComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _ROUTES_2():any[] {
      if ((this.__ROUTES_2 == null)) { (this.__ROUTES_2 = [[
        {
          path: 'view/:id',
          component: import7.ViewComponent
        }
        ,
        {
          path: 'gpview/:gref',
          component: import8.GpviewComponent
        }
        ,
        {
          path: '',
          component: import9.MainComponent
        }
        ,
        {
          path: '**',
          redirectTo: '',
          pathMatch: 'full'
        }

      ]
    ]); }
    return this.__ROUTES_2;
  }
  createInternal():import1.MainRoutesModule {
    this._RouterModule_0 = new import2.RouterModule(this.parent.get(import2.ROUTER_FORROOT_GUARD,(null as any)));
    this._MainRoutesModule_1 = new import1.MainRoutesModule();
    return this._MainRoutesModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.RouterModule)) { return this._RouterModule_0; }
    if ((token === import1.MainRoutesModule)) { return this._MainRoutesModule_1; }
    if ((token === import10.ROUTES)) { return this._ROUTES_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MainRoutesModuleNgFactory:import0.NgModuleFactory<import1.MainRoutesModule> = new import0.NgModuleFactory(MainRoutesModuleInjector,import1.MainRoutesModule);